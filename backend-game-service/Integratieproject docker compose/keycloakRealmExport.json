[
  {
    "id": "b166ed9a-8031-49a9-b512-03d6453a3686",
    "realm": "CarcassonneRealm",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "rememberMe": true,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "0dcac08a-8b32-4a91-8875-75980b02442c",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "b166ed9a-8031-49a9-b512-03d6453a3686",
          "attributes": {}
        },
        {
          "id": "bf157d12-2ae0-4507-b134-2bc31a45329e",
          "name": "player",
          "description": "",
          "composite": false,
          "clientRole": false,
          "containerId": "b166ed9a-8031-49a9-b512-03d6453a3686",
          "attributes": {}
        },
        {
          "id": "e8a0d75b-0f4a-4d57-aa26-8388e9a32d7f",
          "name": "default-roles-carcassonnerealm",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization",
              "player"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "b166ed9a-8031-49a9-b512-03d6453a3686",
          "attributes": {}
        },
        {
          "id": "ab9a6fc1-90a4-42e2-b0df-177bf70745ae",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "b166ed9a-8031-49a9-b512-03d6453a3686",
          "attributes": {}
        }
      ],
      "client": {
        "CarcassonneAppApi": [
          {
            "id": "55ed99b1-0c9c-43fa-b2e2-d7e31b99dc08",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "8a9862b8-8ab1-4941-b6bb-486b8434baed",
            "attributes": {}
          }
        ],
        "realm-management": [
          {
            "id": "a18a468c-bfc3-4a2c-8b65-6fd2a84e02d3",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "e3ab9adb-d15e-4a99-8787-77ded797a54e",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "3a2faccf-c02c-4913-b5c5-319856094dbf",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "236d548f-d99d-4a18-9e5a-827f0c1829be",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "acb268d4-ef7c-4637-8543-f13715434177",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "df30a3da-ed67-4b7d-b49b-b8367d0b3595",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "efec1044-7322-4d6c-8936-1fc758559aa2",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "ac4415f5-8e0c-4302-8fa5-560e1f54fc39",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "d5c90419-4b51-4333-b8e2-bba720d81fb1",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "4211c87a-582e-422a-9069-d8c696144772",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "0ae7cb3e-ef69-4cc8-b05a-dc71924e5b77",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "4f3eb88d-db51-4944-8ccf-a76b8f89b80e",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "1151f281-6411-40af-be79-7eecedb1ea99",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "72a700e8-d3b7-4c8f-8e07-91e818cfde57",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-users",
                  "manage-identity-providers",
                  "manage-authorization",
                  "impersonation",
                  "view-realm",
                  "create-client",
                  "view-clients",
                  "manage-users",
                  "view-events",
                  "query-realms",
                  "query-users",
                  "manage-clients",
                  "manage-events",
                  "view-identity-providers",
                  "manage-realm",
                  "query-groups",
                  "view-authorization",
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "66c82655-d583-4491-883f-f9d7983063e3",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "a3663c04-4793-47bf-a93d-0b7a4c365139",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "9da7e70a-5d41-44ef-9f11-6c334170ea0a",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "553eaab0-6705-4e27-9696-8a643500c1e7",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          },
          {
            "id": "6080feb1-c4eb-4c9e-bace-55a921fed0d6",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "4febc8bb-fdc9-45de-b547-d309bf068d55",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "4caefb2a-6c57-4ed7-97ba-c4e9e25d2cd4",
            "attributes": {}
          }
        ],
        "carcassonneApp": [
          {
            "id": "33697dbe-0812-4298-91d8-11772423e25d",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "fbc3401b-2e10-4da9-aaaa-f3108ec9edd2",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "75452d69-fce0-4a8d-a408-1ca5b5a383e4",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "15402eef-6e3e-4a76-a6b4-842e7b688fc3",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "502505d5-fa08-4e32-a676-1942e2fc6625",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "b187f56a-2373-47d9-b8a1-4d0c388678a0",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "a513f9c4-181f-4446-b2b5-1f862af7a5b1",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "7025736f-7ed2-4ee9-84a5-5453183aa878",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "c80977d6-e9b4-40a6-a002-764012027cc1",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          },
          {
            "id": "fe574e33-efb1-4846-a8ea-29b3f5994872",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "e8a0d75b-0f4a-4d57-aa26-8388e9a32d7f",
      "name": "default-roles-carcassonnerealm",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "b166ed9a-8031-49a9-b512-03d6453a3686"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "5568084b-daca-4780-a6c7-2477922afeed",
        "createdTimestamp": 1700826073922,
        "username": "service-account-carcassonneappapi",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "CarcassonneAppApi",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-carcassonnerealm"
        ],
        "clientRoles": {
          "CarcassonneAppApi": [
            "uma_protection"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "8a9862b8-8ab1-4941-b6bb-486b8434baed",
        "clientId": "CarcassonneAppApi",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "iFAQFLL8miW1aOoRgctRtq0cr5ZkdUC6",
        "redirectUris": [
          "/*"
        ],
        "webOrigins": [
          "/*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "client.secret.creation.time": "1700826073",
          "backchannel.logout.session.required": "true",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "c12f707c-7184-468d-adc3-de0845750f9e",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "df4f7f78-fada-4e7c-894f-fff29f5aa8bf",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e002aea3-2408-494d-9b4b-c8149aeca42d",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {}
      },
      {
        "id": "4405efe1-1e3e-469f-b484-eaf5dcee1b93",
        "clientId": "account",
        "name": "${client_account}",
        "description": "",
        "rootUrl": "${authBaseUrl}",
        "adminUrl": "",
        "baseUrl": "/realms/CarcassonneRealm/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/CarcassonneRealm/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "post.logout.redirect.uris": "+",
          "display.on.consent.screen": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "42660082-cae2-4ae1-a935-76d0e9a2cf98",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/CarcassonneRealm/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/CarcassonneRealm/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "1a92da26-a58e-4c5d-a0fb-bafc7711acca",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "0eb25156-3f51-411b-a158-e3f239a8c188",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "4caefb2a-6c57-4ed7-97ba-c4e9e25d2cd4",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "fbc3401b-2e10-4da9-aaaa-f3108ec9edd2",
        "clientId": "carcassonneApp",
        "name": "",
        "description": "",
        "rootUrl": "http://localhost:5173/",
        "adminUrl": "http://localhost:5173/",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "http://localhost:5173/*"
        ],
        "webOrigins": [
          "http://192.168.1.109:5173",
          "http://localhost:5173"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "client.secret.creation.time": "1700769313",
          "backchannel.logout.session.required": "true",
          "display.on.consent.screen": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "67962fb8-d006-4534-85f3-faaba9566bfd",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ade795f2-3378-48b9-a20d-7b52ddccf3bf",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7317252d-b98d-4189-80f3-d438100e3c0f",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "2c8f803b-27b8-4487-8d69-5d06d064e60a",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "d5679903-7c3c-45ac-882a-7a15674f278d",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/CarcassonneRealm/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/CarcassonneRealm/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "2da84306-84ef-410a-ab29-8680998ddb69",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "113cb23d-1d29-4615-969a-c4c7683f9ff6",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "c651c924-187c-4d09-a02d-d8b527641647",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "3af8bbb7-96ae-4711-a76d-3be15ed57154",
        "name": "carcassonne",
        "description": "",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        }
      },
      {
        "id": "3b34d5eb-0df9-4a2e-b464-dbb4246f44b4",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "2a390033-6aa2-4dc1-bc94-5dc92e46fb2b",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "9e36af6f-f52e-462b-b15f-3dbcdf228a9d",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e4470b55-cbbf-46c5-9309-55c6a8e06af5",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8f45fdb1-1269-4a22-a878-a45d73d1231c",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "34a29632-f0d3-4c1a-a938-ea1dc66a4162",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "9d52d252-fce2-45ce-93a6-f1d67e8395c5",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "5dc2be06-df94-4965-88cf-ac89f1061154",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "0809df24-7c0f-4889-90c2-4700d639da24",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "a937039f-67bb-431b-a26b-55a55bfbe564",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "86b6a187-453a-41d1-8f0d-35f1e18b9165",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "4fe0f9d9-60de-4c0f-810b-838c3068f98d",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "8ca48956-928a-4987-918c-41a0f54ccf07",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "49bb161f-2989-4806-88e0-8f95645a7ffe",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "4ba6c18c-97b1-4c4e-a1ca-44c97d2d9446",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "e03d5c8a-202e-407e-b921-531abddb9ea8",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "9c7edf9b-ef97-4ff1-9a29-c7ec0856647c",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "f3f5328b-1e5e-4cd3-83b1-3e57246d18f6",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "40de29b5-40aa-4807-a95a-9b3baaac055d",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "09f7bf4c-88d9-448c-82bd-3d1e44224728",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6fd011c6-545e-47cb-a7ae-dad53be7fa72",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5e06ffa3-a7c9-4f73-bd78-a47a8fd26a57",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c9d3177c-41a6-4bbb-b981-3ef51155a90a",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "23efc0fe-73b0-467e-993d-b7ef459c8a3a",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "bf432d58-4d2d-4841-900d-217cefea181f",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "29a36045-e4e7-4e04-8cf8-ce83995c3705",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9e6f2fb3-9a6f-4248-96e7-6320eb2d0705",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "465e9589-6e67-4b5c-8eb8-beaadefbf52b",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "28e68088-d1dc-4bc1-a9b5-a5da22d15064",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "ef6ef83a-01aa-4651-86bc-3b331bb23f6b",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8fa91366-1922-421d-8209-101791170eba",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c0d4c04b-bc72-4aac-b432-f50ad77245f5",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "206bf0c3-3832-4c94-b79c-cf6d36cd4789",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "6337dc3d-0e4f-4b75-b6d1-f620119a9a9d",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "aefa4ef8-4261-4778-a536-57d96ddc6605",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "dc35c0c3-30d6-4f1a-8e72-34f3e59fa5f6",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "0cfd647c-f9a9-49f4-a053-b478002ed965",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "b19f2dd4-193d-4177-8271-9ba5923110fb",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "84a5fdfc-f85d-43d3-869c-d626a62d07d1",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        },
        {
          "id": "f33eeb71-4c23-496a-bb7f-536b84cf7fc4",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "155921c9-0456-4953-8ef6-2af385977e10",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "b5414514-c5ad-4bdf-9fe8-edce19ee9ae5",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "5cfdc232-a52c-45de-928f-83dee151b133",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "c79d2472-888d-4814-b650-f90299bd7642",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "b3543c04-05b9-45e3-bcb7-4fca5a367aa7",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "0d80b889-3aac-437a-8405-74270f4340be"
            ],
            "secret": [
              "_2zkDfMMR2H2VSn1Wn4UVQJ7QfJUgY7yyGbPPBNT45OxbvEuH8kPWm-eow_x1X1tWtUfGjKrdogrECmcLt0Bgw"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "00fdb29d-a3ea-41f7-92ea-6c51d55e817d",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEogIBAAKCAQEAqhzVTJY20q6HY3kZTLjq4WnzWjWhncLYfs7HE8Mvjx0td1ioyAuSV9ktTh1bSsXNlrYgKldsI3aGNCrLLYEehySss8v/RFM+o2s4PcxN/k7q2sxj14inmE/riNoHGhBWrJmPTwRyp63XvNy/AVyjqGHENwnT2orHSJM33wJSvE1uu97fTbULya4VNsQSshUfyrANBp5jsEZUhkL2zJUPYYmonmRQmlQ5SOXZcVcaPLpsRbkiuUQQJ9gdiLvBJCF0TrOgG8t1QaDDEr6eaQ9BEBAqeI1rUL3P2jYLV/b25zL49msNS2t1Ia2hc3TUrRDjSmZEYzJsEUq/odRAb1AvMwIDAQABAoIBABlcbBZbbLfzKh8T3kg4Z1gMzil8Rmh5NIKPPFG/bzc0X+NjleIhC4PKTn1PVh1rKO/XnisB1o7g7DgZyymxDsaSGqdBegCLMpL1eLCJ5XTM+il9gEMRTf8gpxpDevyRRAK+cAWVQayq97dh554B3CpNzQ1xiyKRPw2cWR+HvqLw4BVQ9H2eGbE6SS9Vj8ZvMElSjrJwpGa6v29mQ/ajUv5yuIcUf/mUyX658glF1J3HBlbmDIGlmQq6OwJHb6shGCVnnKDQ9la9T651nLHr73FQeNVECH0IPUfNLiBgGYqrdC4oYv1pc6mrkqe/xgULfCk38u/taCAYBah1inxBMMkCgYEA2LUILw2IRGMFyHGQnQhvk9+38akIDEAK3KZK2GpaTUMHH0IVYWrenaaASDHdtWrJ8bArMEkxbFusvRaG05uEyKnDH83dX9+la21p4V683mgDQddkQk+f+5JEoLyUcA6qHfXmDVRIqhSA/7y1CL0dSoRlK1J1/lla/oFnuFFUFEkCgYEAyPUB87Dj/yK+gf7CRF1w6ljckZy5O5b66sAuh4GE+7B/f3LXO23Z2inYlZQboqOmqqpmiu/8JBwnqb568G1bEXnKz0pJIQl7oEgqHjGlhpXDnqgvrXn9hyStVY2BXiygupMxWSjyNsZl/a9mz1XLw+9Oyzl4V9PI4M32kyc6r5sCgYBonz3MOaRIH+Zy1yESLzhvE9sieJDCGUklLcOEqBPgqTOPC8B2v7mqMvBL6oc3Rs8oN/0h2rRZtAi5YV7GWpbIqeziNelil/6s1q3/eFWGqoCoEOz+dqKuOfeYAnNHhkzrGgRu+vn54txEmz5rcaHqj/Cn8a+1lD4yEReaDOmiwQKBgE1mYLwVk5s/LJUxJG3kd4srcrj63jVfb4FfSAyVDD1Mu67A8rlHFDN9Dph+FS7NTXJKc3hr+neGCJjObtePpxXSDRVODWCWIHGZme9LO+/cWx4OtV5hsA6PR9u9xugY1EdITieDJ9eFDt9o4XZWG0d6MqT/m6RoQ+SiL6h54ZalAoGAMQYcTssqxrJ9sUyUjANrgrNvisPYfOkvGDhG91ySfEKj3pt0oAt0eHWAW0oXsQ3TQKTkXaOPNaFDl/N4TXpaavKf9d98N87hUAkpVQKnHT6NN9JNGLgzWlma5UExFR9BVQLxVt5hQJQA7HE0PhGZ1ASAUEUAZLIlsMun3J8/rC8="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICrzCCAZcCBgGL/b4cXDANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBDYXJjYXNzb25uZVJlYWxtMB4XDTIzMTEyMzE5NTExNloXDTMzMTEyMzE5NTI1NlowGzEZMBcGA1UEAwwQQ2FyY2Fzc29ubmVSZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKoc1UyWNtKuh2N5GUy46uFp81o1oZ3C2H7OxxPDL48dLXdYqMgLklfZLU4dW0rFzZa2ICpXbCN2hjQqyy2BHockrLPL/0RTPqNrOD3MTf5O6trMY9eIp5hP64jaBxoQVqyZj08Ecqet17zcvwFco6hhxDcJ09qKx0iTN98CUrxNbrve3021C8muFTbEErIVH8qwDQaeY7BGVIZC9syVD2GJqJ5kUJpUOUjl2XFXGjy6bEW5IrlEECfYHYi7wSQhdE6zoBvLdUGgwxK+nmkPQRAQKniNa1C9z9o2C1f29ucy+PZrDUtrdSGtoXN01K0Q40pmRGMybBFKv6HUQG9QLzMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAkTpNmldk9j6gdgPIYRkqI23yn7wEit7j12zXscSQstc2/kHJJNs8Rnp7UDIf/Hxv0fKd6gKJwztRaJ/69jiMBoBLqt8u1K4zh1fJCJkyHIrdbNQu18fOPFIckOhviOV+G8/FCHmUkYr6+PTBYkAk10vk9ZEFJ4fShBfjTvhmOJZZiQjNbayXi9YXsrpLROzLGlbJnIIKnx/ceEgvE9x2WRwsFcvmKkBFAsUa5tW5MB4yq6msuuvw38lvN1FbeGP1uGu+YTo65PsqRkf/hg2FpVKYUfUteMdVQsDamrYjl8oBzG+CDlAuy7Cq7RYm5S8Sl+b0x2wYiwnrMvg7vk8/9g=="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "496fb395-017e-4e36-9b7d-2fe1a4628c68",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "80666c4f-e74c-4dfa-b659-a0c3b68ab90c"
            ],
            "secret": [
              "ykfGuMAKVHvlN0Myt2xJeQ"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "b2b9a13f-2916-4043-b6dd-3e15ceb17fc6",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAz7bSN3tEvXpzU5w+7fUmpWzVbPHpbMaGRnVXhnvPgwN+kWzWUw7p0at8p6ZqPnmwqbxzl3JD+1p3llZlq7Nh3BaHs7kKwlkGryMz7vAgv5DABZwkXrPXGMGoZDqWeoPhJrFV3kMWtEX+ZLD/S/43uE2ljdAK5mEs4EwJnTX+eUglHqvptS85lsvtAXijWiRSN/dwifrRS/3BX01BE8vjqx8wxcLiJDagyi5CJhVeoEwMJpnum+eCXMqFyRc+9IzIm6d9X3Lr6p4PWpE3kYpSPrfIIfK3ioQnOFxxBb/fgYxGBZG5OdUu85XOZz9RajAzjetvk2AIXTVD0Dgv68FkHQIDAQABAoIBAGFcgXauGg9ymSIkx76EPaQmuneBgPeSqpfWIruPxznS5n3F9UQjZmf4KMrwjzZPlgZJpijjz4e+5PUb9DYiNAmUqfENGET2s9Jd/tbNyZvhfpBimw2k4HrjM0ofyC8PJ/caAnTXH4pKkK6j5Fa7h2SlSKeLT8Ci5gUQvyTojSpNVUJ2An65WRn1L1/4QmOza11arGhFl1f/AY4hn0IENKCvTnS5zwZeccWiRIZhPXO5RchvO4p3qKihnYCIl8fv0OI7x0dmONFMtbu070rxt5J5x29vDDwV9j66WyXz74FaTSgqZpkspY04SQ40bF3mMkPcvggjFNufTC7zYQurNMUCgYEA9KmyRz+SlHrdWPs3m1g5Qz8PZ5ljY51t+ofW3+Bcw8gOVs09bqgp0rYINactIQUv3yzrn18KX2xdn73AEXeVBV1Ikn0+GcHH1lAX6SIjr2y02Uw1cJGW/2byp/yatapAV/jD26eGZ8tlJepOWuHaEJVY0rGlfAQgLAhZhzsZdT8CgYEA2VbSaKBdVgVJgwGD58xmwO4Sh6tdQTea1tMJKiCL2ForlaBqjWRrm145yA4FqwJ/wg6/hMRZkqPv8YS3/I6hTZKeNPwLbzf3W2FWeNADJ0ort+Xk6iSq96CbS9iCciyeHrbhSwl1pe6ZDyuvQ7L1SljGmUY5Ar73vlnLeZrUA6MCgYAIHbD6SBOWtVSuZPb9Qjn0Dx11tFLltQ026FaqaojpPbOsEXbeOtnYUY2IKhmHJOLnplfSm5Z+f9vDNsouSic5XFTR9zGeLR1x8Io6g5VndlWxd6O2Lj4yDrox9GE1cYZc5LWqja4Zt1eNoG4k+aUAM9QUeSwiJwjiLQy7PaykhQKBgFGhWX/wk33mmHi7Dfb2/7UA9ja8t1bycpazRuLqvHuzSmF1ke+vQvdlCaDJG3nig2e4sFhGgzofltSIu64BSDZhlkhiTk0koSRSR+8yeay9H/R/RV5oDUraqNlw5XXKqkzw9WeAkw6SsixPhRGRWq3k8BrLlEgiv9xfz5vJ+k2vAoGBAMIdcT2nM0nVCZ8gVxMtL8FH7hbI/Zkr1RFO9Z+oj67w5Mh3VqE414UfkBwsIBbbeWvL61SzJJqkTREcfAY8hf1A6EMDLzWI9Bd4+vABfu0GJCaRREDlGdlwHQ/U7T5cxqO40+fnfgqn2iQJzhKWLKW0ur+Bt3hyldsEAHonTABS"
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICrzCCAZcCBgGL/b4dQzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBDYXJjYXNzb25uZVJlYWxtMB4XDTIzMTEyMzE5NTExNloXDTMzMTEyMzE5NTI1NlowGzEZMBcGA1UEAwwQQ2FyY2Fzc29ubmVSZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM+20jd7RL16c1OcPu31JqVs1Wzx6WzGhkZ1V4Z7z4MDfpFs1lMO6dGrfKemaj55sKm8c5dyQ/tad5ZWZauzYdwWh7O5CsJZBq8jM+7wIL+QwAWcJF6z1xjBqGQ6lnqD4SaxVd5DFrRF/mSw/0v+N7hNpY3QCuZhLOBMCZ01/nlIJR6r6bUvOZbL7QF4o1okUjf3cIn60Uv9wV9NQRPL46sfMMXC4iQ2oMouQiYVXqBMDCaZ7pvnglzKhckXPvSMyJunfV9y6+qeD1qRN5GKUj63yCHyt4qEJzhccQW/34GMRgWRuTnVLvOVzmc/UWowM43rb5NgCF01Q9A4L+vBZB0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAhfYxRBjEN1N2kaPlLNICyKqquib/BB3M0BYTON6qjbtydqLl2SUrtuHF6C7tLvsZE2/BqguLobh00KcERGdSd3lqnnLPcZcjFnWmMVklO8XS55lNLfwEpqYXl6GNbCr8C5oFQz8DX5lQLY4pRZQRMJTrVt+c9rea0fN7OxwORQdT/q+abBgfAuwtv3OvPf32ECWAVhBuACt1DUQnSpPBqVX87KSGDUED2pqBWr8hRxeaomhXxHDzf4z/h5JnxtlUrMz0jTqGVx2YqwWVuDAyT9gb3y6oYbHnXiRSB57o4nTM1E/Zy83xdrSKeodOWn/kUufw+PPcCRNZWBOqZJsDyA=="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "1d9044ec-6ae7-4145-acd8-feeba28c5913",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "46acdc78-e2a9-41a1-90ca-c229470a9fe8",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "65ca6a91-5e89-4a37-bd36-e36e111c4a31",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "75c8b677-523e-4feb-84ca-1f1b0c5988be",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "71c239f7-2c62-4a2f-92ee-b6b30c3de2d5",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ce3a3c0a-149a-4946-9f39-2fb1f877e9ab",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e9a67425-7fac-4723-9405-d383bf1f947b",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7ed65614-5773-4613-8e31-0664f746bc93",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1eb800e9-6741-40de-b61e-1df04fe050e3",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "92bfb614-0671-43c2-b612-6f9386feb24b",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d2044e2e-becc-4e71-942b-314e76a4b168",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "078cc6fc-c687-4f3f-a8e6-834eba97b918",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "6f339c29-be21-4105-a94d-41081d14eebe",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "18dcffd5-6ba7-47a3-9626-f8ffb140eac1",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "589db3be-ca5a-43f9-a026-ddac27c7854e",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "55a7a196-f179-4728-8901-9cb401242abb",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "918176ea-0f8e-459c-8783-a658fd01f37b",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9eb481a6-2b46-49e0-990c-cf73c2d2f9ba",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "e0307f3f-23bd-45e6-a12a-cbe20b2eb9b4",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "a0c9274b-a0b0-44b7-9d0a-8f5f71115181",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "22.0.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "69520dc7-64b9-4e3b-ae71-2a62ac863150",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "71747448-df4d-4193-bbd2-5dd0845f4eb3",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "69520dc7-64b9-4e3b-ae71-2a62ac863150",
          "attributes": {}
        },
        {
          "id": "db3019e0-125b-4449-a6ab-f9beaab3fb15",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "master-realm": [
                "view-users",
                "manage-events",
                "view-realm",
                "impersonation",
                "query-clients",
                "view-events",
                "manage-authorization",
                "manage-users",
                "manage-realm",
                "manage-identity-providers",
                "view-clients",
                "view-identity-providers",
                "view-authorization",
                "create-client",
                "query-realms",
                "query-users",
                "query-groups",
                "manage-clients"
              ],
              "CarcassonneRealm-realm": [
                "query-users",
                "manage-events",
                "impersonation",
                "view-users",
                "view-identity-providers",
                "view-authorization",
                "create-client",
                "view-realm",
                "view-clients",
                "query-realms",
                "manage-realm",
                "query-groups",
                "view-events",
                "manage-authorization",
                "manage-identity-providers",
                "query-clients",
                "manage-clients",
                "manage-users"
              ]
            }
          },
          "clientRole": false,
          "containerId": "69520dc7-64b9-4e3b-ae71-2a62ac863150",
          "attributes": {}
        },
        {
          "id": "4a642818-8f41-4445-afe0-f02632efe450",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "69520dc7-64b9-4e3b-ae71-2a62ac863150",
          "attributes": {}
        },
        {
          "id": "fa98e6e6-6e59-4cb8-a8d2-4efc3889cf6c",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "69520dc7-64b9-4e3b-ae71-2a62ac863150",
          "attributes": {}
        },
        {
          "id": "d6b1f4a6-5233-4b80-b5ca-c84fe98c3905",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "69520dc7-64b9-4e3b-ae71-2a62ac863150",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "74a77b6e-0ca9-4e2c-a47d-9f42d52ec575",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "f2dac470-2a76-401a-bb0d-064fbfc4a4de",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "0f33b1b4-aca9-438b-b694-0d85cc83ae38",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "c5e8b8b4-59c1-42b5-9285-b596625d3ba2",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "6ff47636-2957-45b2-b7ee-3f000d6ae3e9",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "b577b2a6-827d-432b-8f2d-f5fa5b221b0e",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "3e3c9273-56e8-4d31-a658-d33ff077807a",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "aed9fe3f-f178-4e3b-a2a6-1c10ddd3ad74",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "d995becc-4458-472f-8e5b-3ad9635187dd",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "58bba4ac-f918-4fb4-b030-7bc3a229e117",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "8dbde65e-b641-4ba0-a13a-aa79593d5c1e",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "c0ac9946-c308-4d33-bab0-c32bae42d94f",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "9991eb62-e9b0-4aa3-813f-ec2790074938",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "43970ea6-74da-4eea-b646-88e5bb9e8f59",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "d772511b-855c-43b1-84a3-a9822f5fd556",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "bf58b58d-78a4-43b1-9b87-72c68a466a96",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "0eee3da9-3914-43c6-86b2-e77ab975ca4a",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "a3c98eb9-d138-46cb-b750-ab9a001478e3",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "b65fddca-4dd7-444d-90fa-93ce1cb8bd9f",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          },
          {
            "id": "092387eb-4dea-4256-9026-ebeef8543073",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "36d139cc-f23f-44bb-ae05-464baab24bc2",
            "attributes": {}
          }
        ],
        "CarcassonneRealm-realm": [
          {
            "id": "11ca46de-7967-4898-820f-5162b7ebc111",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "08eb0daa-0c45-459b-9d61-d5c54f7ae6ee",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "f294a120-ce09-43db-8ff1-9199e517fa70",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "b1f6b397-16e3-4e88-b023-3dc054423a5d",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "b6ab8eb4-3d3d-4e4d-9d96-49f95f6fa19b",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "CarcassonneRealm-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "0fd0bb3a-0845-45e2-85f0-4344b473a891",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "9d7abbb2-a1e1-4703-ba5f-0e2308fe5341",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "2de6576e-c22e-4619-b281-275261208e25",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "c9a42bb8-c50a-4f97-9af1-6f404be7ab5e",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "c845276e-1f71-406d-8def-a02d29852b9e",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "CarcassonneRealm-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "79f87f9a-9f2c-4622-beba-8608bb0b2334",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "c92ae1fa-481d-4ec8-b989-2e0e8219cae7",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "66239ce4-7401-498e-8e3b-88e16098ffc7",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "2c8f313c-2323-4f76-8150-eb0f795bd8bc",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "6a702453-7d5b-4c07-b041-0786accfd6f6",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "5aecc3a6-1298-438a-8047-44155636960d",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "793b6800-dd7d-4071-9354-727bcefad8dc",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          },
          {
            "id": "1a42a2e4-e2e2-43b6-a684-5e1de9556e50",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "e2cfec42-7eb4-46d7-b32f-982b2c0aca4f",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "b53c8c2b-781a-46c8-abc2-f18f830e5e8b",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "464fc14a-6b0a-4cb7-bf6c-4ed5d5d42588",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "2d87ad4e-aef1-4fac-9bbe-47d157eabd63",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "bf06ebe5-c147-400e-adc1-cf374c67104c",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "f3e2b4de-805c-474f-aea6-7a07f4919be1",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "96087e9e-920a-4a66-be02-0275f505ff96",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          },
          {
            "id": "d5cdea9a-7b24-49f5-96bc-26376c5a07bf",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "fa98e6e6-6e59-4cb8-a8d2-4efc3889cf6c",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "69520dc7-64b9-4e3b-ae71-2a62ac863150"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "b3f6b8e1-2c94-404d-8c88-9527be59cc39",
        "createdTimestamp": 1700752202075,
        "username": "admin",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "credentials": [
          {
            "id": "46435c05-eaa9-4888-b4d4-6a11da873bc5",
            "type": "password",
            "createdDate": 1700752202190,
            "secretData": "{\"value\":\"LsbqqwVB2IxbAUXGpIJxaXyoKFMfV0k9D0rBjeAC2jk=\",\"salt\":\"Hm75F7+aIGKgg3Te7YCJ8A==\",\"additionalParameters\":{}}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-master",
          "admin"
        ],
        "clientRoles": {
          "CarcassonneRealm-realm": [
            "query-users",
            "manage-events",
            "view-users",
            "manage-identity-providers",
            "view-identity-providers",
            "view-authorization",
            "create-client",
            "view-realm",
            "view-clients",
            "query-clients",
            "query-realms",
            "manage-realm",
            "manage-clients",
            "query-groups",
            "view-events",
            "manage-users",
            "manage-authorization"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "f1662ea0-c074-4a49-a8db-d6e03bad52c5",
        "clientId": "CarcassonneRealm-realm",
        "name": "CarcassonneRealm Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      },
      {
        "id": "bd9892b8-d1c5-4966-a44f-99f9f3890395",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "68cfc628-34da-4c8c-8fd2-209d37dfee52",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "f7fde730-30eb-4225-8f75-2a4d726eb88d",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "a2b62f21-a7a7-4472-ace8-59b0c80c5e40",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f2dac470-2a76-401a-bb0d-064fbfc4a4de",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "36d139cc-f23f-44bb-ae05-464baab24bc2",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "8f42dbe4-aa94-4897-af68-74f0046d4d1f",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "dcc9ca06-a1bf-461b-b629-05067317e67d",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "91a20b72-bab1-4871-922c-07705790690b",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "b8d04454-00fb-461c-a94c-b4af41700853",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "5064fff6-4849-44bb-bc29-a1618995ae88",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "cb3c3a86-00df-4c1d-a685-4c253a7001a9",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "d5540dfa-5dde-4253-9f7f-20f2e049b758",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "80dfa001-87e0-46d3-9c5a-94f9ff9dfa99",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "a87c3f42-34eb-4290-aafc-b04789282154",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "26d6c308-117b-446e-88f7-1b8448d129d4",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "b98cf8ef-e3e6-460c-8169-0df4885c1477",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "1733dbde-034f-4c53-b621-541059279874",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "816df5df-3f3e-40f8-ab38-7334491c46db",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "7a3a4684-f79a-44fc-ab1d-be3149343c5a",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "206c3d62-746b-4573-b3ed-fe91d5ef6321",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3b71c649-86c5-4463-9e80-14fe8cacdccf",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "139e372f-fd51-4d5a-94f2-515a65f2652e",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "77e3f330-5e4d-4000-9021-76d22e99961e",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1dbeccae-6116-49fa-b0f3-af10d9ee70ab",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "62d3a01d-eb85-48d2-aefc-6f19ca43feb8",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "78b34719-7f41-40d9-b967-8cdadba55d86",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ddf5d5b3-71e0-4a88-b34c-8ea8ee6c807c",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "df1cfccc-9c1d-4f21-9751-7b0d34904ecc",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5c49688a-2bf4-465c-be3a-f0321b206bdd",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ca9af1fa-fcd2-44c6-aed8-6dad411fbcbc",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "f9eb4fd5-3686-4397-ae6b-14b226213efc",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c79746fd-1a68-43e2-acda-c1fbb996200b",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "e66b2b65-8719-4059-bd19-8f957bd001ae",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8587e7e0-832d-4b47-9620-857266dbb984",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "9effd9e3-9f53-4f00-a34a-4a2e2704f403",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "02fa85ab-d43a-4584-9f4e-1c86c4333767",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d5bc37aa-d36a-4d6d-84a7-076297bbc7f2",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "95d7f45a-3d0e-4f7a-b8a8-43e0665d9ffa",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "fbe42fd1-b676-4a46-97c6-a23af7cba8fb",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "e7907f93-8916-4e53-b2ee-96a00732cf2c",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "e386d490-94c8-48e2-b469-752bcef9b883",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "ac6de399-92c1-4657-a4cb-c160fd5b1a70",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "09bd4fd4-4cd7-4f21-b098-ddf4897533a9",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "5a32be4c-e2f8-4619-820c-196f3445dedf",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "referrerPolicy": "no-referrer",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "xXSSProtection": "1; mode=block",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "7764c9f3-99af-451b-b018-159aacded73f",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-role-list-mapper",
              "saml-user-property-mapper",
              "saml-user-attribute-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "e496c497-8755-406a-9881-f9f713681af0",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper"
            ]
          }
        },
        {
          "id": "e99ae132-4f0b-460d-bc8d-9b1084dd7c73",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "ee4fa40a-01f5-4e85-8e72-c0bb8535953d",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "36cdcf35-4370-4421-ae0e-0e92037797e4",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "2f0eab22-b9fc-4394-a9c1-5bfd542be14e",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "47239621-3e23-489d-976a-372d274283a7",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "cacd9c27-a530-470b-a247-e481be1c8dad",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "0113a6b6-921d-40a4-9793-67789f35cf3d",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpAIBAAKCAQEAwLe9/om7w5w8H/3ayZFKx44Y+6732TxMnu0EahLtU5z0I1jh0UUq+x+VovntqFy054GYqM/Vp8iOFe9jIPfSmvgOes0aVE7aFYsEW+2bap6NRHQPJ5M0bL8MGHSY21iime/rVBQNa+5de+TozEkdCJ9yxFEMjtQW2XvTjkx3fRBH7zx7+H0rROR7meysQGNWvTtVot5Bf1UQArBWBGErEiRyxIP6nN3mqR/uMpCD7JrhqkoWAZjzN+UklsgMbDI4fpxkHYy2Qbxu4ouOuArhWSYqgfnhis2dpgUOD9J66qd2hfmXgEkbdR/K6FT/leFITXwNDQ2tx0L+fW82YoxxCwIDAQABAoIBABcX7ZSK52J8CQMXEG4HExxGqDJrYm04ZJYcIONKfACrq4sbeN6dmJZEeqdE+82pDk86SxOE6ZK+3bKTNSBw516FSyGRYmOn70pAQQ14XkoF0I0wuyrVi6VcX2lZei0OugK9qp2F/vW9YpvDb9d1thz1E8j3+AvwLldxbIXTc/NwbV4le8DHJyqEx+tXLSvUTOY5Fx3UQiSmLLqMY1MeYARS7JkCkywHJdKUQgsCB8MQVHi1CXyfFheGdDBXKjQ2fcd2m7sqekR587DnUbnAgJA1iBjb7ULNSx+Cj2JEz4GqrouSy8biKThKZ1UIeGUK2BhZGNMBOEOVj9cnwF8yCIECgYEA6pru8hA4kNY2DWTCP+5lp867QkG1VywDMduclZ5OPuiHAYG8w0SlHVOcnxZ98gRwn7kYdLkiW48Tv9oVPGF041p9u9SEf6GOhruGed5K2TzIKjssUXs4eu1g0G7vNNATlnbV/BTtrJpHR3fUE6l755SI/Usnbj0ntpOZSitnP0MCgYEA0kropDdG3XxJhAW7qVT8RMxnTSJgHWixh4y+zmj5WcbFI1U70qRLVBmjq0a1NP1fTFbvqvb+dTHXLvf11l1MLPXnygrDiazR7sCyEUBs2p/zKGcCNwCMP/ItA1EgPRzwtNOM5ZmrZwnXkc0AF7qRdMkUOr1QBMtJJ1X8cmDKtpkCgYEAyz4+E2cKGi/509CemFQnrSDkCZpzR3nRqrffB5+FmepIS33h0ij+AlIVNZ1+rtQ53aW1EinxIfDp4yNDknO7l9slYjvSLeAAYajD74Asx9Zocm2hD1X4sEZFwUzZ3p8E2S1KZICdBxMA/WFKUV5bAV0k8IrTNiW06e8ktaS0ZZECgYBgsi8tK3m7aGYJffVflIN3QyIQ9siJXVWchZxLHzvhCyQk7hFW91Ln9e4rWJUEK6mBWcxUqcQxsVxH7Z6uFjJrzhrp7W8iREQ364U1p5EmKjxODKeZEPhsgvgtuUUAtOj9zPTRsop9E6p7EW+EebZepANYSyqbObqGiuRM17L+qQKBgQCylGwwxekmYD4UF83rrGdsJNPnv4S9XRN6XR5KkVDZr0O8sFlxKDHVatMSD49t6/rVzmd50zZUbPH/nGw2v95ZS3uwj0VyZOJie05v8bVzmPH/q3sHOvIS/oDEGt6SlCy/+UaA/IsMHhFZQG81lXBTyl32iUIcaJ7hOUOFNDyBbw=="
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGL/LsUsDANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjMxMTIzMTUwODIwWhcNMzMxMTIzMTUxMDAwWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDAt73+ibvDnDwf/drJkUrHjhj7rvfZPEye7QRqEu1TnPQjWOHRRSr7H5Wi+e2oXLTngZioz9WnyI4V72Mg99Ka+A56zRpUTtoViwRb7Ztqno1EdA8nkzRsvwwYdJjbWKKZ7+tUFA1r7l175OjMSR0In3LEUQyO1BbZe9OOTHd9EEfvPHv4fStE5HuZ7KxAY1a9O1Wi3kF/VRACsFYEYSsSJHLEg/qc3eapH+4ykIPsmuGqShYBmPM35SSWyAxsMjh+nGQdjLZBvG7ii464CuFZJiqB+eGKzZ2mBQ4P0nrqp3aF+ZeASRt1H8roVP+V4UhNfA0NDa3HQv59bzZijHELAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABHNp/9fu8tqBBZTpM9+ifx/nvF4pcJ4hsgr3fC1fk6AUAkpSjTFTCG4vTcM6X2nh2DeNQzf8+HuVfmVzf9Ud5GJ+J7lCuA2diTC0BVHTwX/MXDh49CCq9HENCh9L8dNukWB4ly+W20o1b6bp7ara79IZZJzlR3KQZxpM/VZOH/OCoXIHBf9NENslZ/0kBYtB2LHKsL17wTv96JD9PqkO0nQxZEAdGT31Bjjz7XIlI073Jb0FxDcDmtjwhf/pqDqgGJpY7NZt826FSWgZ/Hgn2qPIRNWKMMmKFin54cuVg4gihBmMlDBt2w6Vd55CCGxZFJcMjhrPalxiMedYK3Vz+A="
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "747f7f4d-c8af-410e-aae5-cb22f4329d00",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "4afe20fc-b9f9-4f87-92d7-3c933b20c66b"
            ],
            "secret": [
              "PeD0nIaU-sVf8BdlObazyA"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "624fda55-a5b0-4eed-b2e1-b8b6b0b5ad4d",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "c8760721-f466-4623-bb40-464d9c9826c1"
            ],
            "secret": [
              "GGC7eDtrbuqSSx5Fk4ht3vxyRQ3JodMy0SFOhcXcExnpciNWEUdbhuUWHhcFP_-Zkcopma9Zjt4Bb6YzA7IEyw"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "b104dde2-e978-43c2-8ece-630fbb259dc5",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpQIBAAKCAQEArgSw4mOa7PYfHCDutLiMT6d8r2gPz4MBwoXtPh+KYdU3E1JAkJs/wnSYE/cWkA7Iox7AP3IBq1CzQX3mAIgeXjOp0ZWmb5VCXHEU+tgZfyHPfLWj+7S+HpXvh89h3v6YuOH6uUA0LR3Y63Z6QoAiLt2SH7vFkXWKJANjW8t8ggn+FniKOLjd9DKShpBInJu8ocUWJTtSp4N0nUmoq3dnN03/eTvza7tsV9l3ZbnrpRCXAEJOfEYqQb0uTsD08uEFUhSNpevoiicmq/tMFwlY12nuAwWTp6F8CoM97GyANPBDk0tJ+UAZnTup5bSfvM8HcbMiRRRpFrq4dUjWlTIOFwIDAQABAoIBAERTojJZ4rhdES0Fv0RlW+5guIPU67RSX6wF0ve8AaVVRwlGmARPePL8vcPFFm5c56moxtqChKZECwZRjTAzQh1B0tFwnYedhw9t9Uti82voFiSE24zW1HmE7KaaJncc51FcpYn8bCA04nndrLaUwhc9t4TPQQ1Spflq/SXLWali5eLCJUCH4cbbVdiOCiqq6iKGmngokaJ0ZTIdkarSzseSfojRmO2wjZiUGjFBtG0rdNocb8hLPuvu2PdMk1kTI05h3JyNi7NJXimkMGRTohUUShck7+Fd+W1c/HsZx8qv9oRA2PbCsYhl89hnVKWM9ozE9yHnwF2I9311BeqxNFECgYEA4lVUUUFGTJA1R7b+zXmukIAQ7KbrGrCoap8TLHRpzmxuDdlKoTX5GxzRnVn0N+d616HkS0QWnJ5WueQOW+gMWmroUp32gpUm9OoufhbiHpwH8CfrAGEx2HncWgtXrXvDG9msNUCB6sJqd6gBYKsGfVJtU/uZSusVIxtGnRToBIcCgYEAxNPrQyHYxBIlm0aDh+7hSS/WlX8tscI3v2iwaAaPMe5aeT1fHEQt+it9N3GpM+nWSxHj4sAOpsLvLt7KllHkoE18jg6lu6pEUn9a+8TAHLFWqyUGo2OBz9o6GtGp3OGPUKk6RUJk1SIadanaiFOU6m0niJG1UF4pewD0WQLJnfECgYEAzIHPkzAI5ktzaR5ns6AcZILjSAI280Hmm5irCYMSy6tb8fWCIpKTSLVMjgJm0lC9xbOJhZy7Vb8YnBT+CHtvFg/9ZhFHWYyNy8UCR3pDzOatoYlgJVKtaG4L9ezDx4TJshOIMAHeohITg5Tx0bgXQAvHr5fqVjB+Q990eaEXWGcCgYEAr0Xnoohpd3CRfIx2ZH4csAehls8B6eGBszmOnZP5wAT5HC3CnHE6YCSKBO16N3hsE72CqVFNusKsK5jJ3sJeTUGzQO1aOJuO68ftRXYXfXWOMClwl97soiM6ytcZ5FAYR0PrV/GfyQvtdAolSHDlkzxQkBTw2PiBB7/516nb0IECgYEAu8wT4AfE/FEbDt7jSMJI59VTkdYLTyA6iWdRGZDG79wXG2NfUpe+2lqh29hDc3inFbJ3JFNRmAJnv3aweWA1/c4UCsZzzfAmdNgp2c+OGC71ghL0CLJs8N0/BQcXuTgnMi+K15LxE7NOt08ZYOA1iH5cnTod2mPH4scmkZ9J/9k="
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICmzCCAYMCBgGL/LsWRjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjMxMTIzMTUwODIxWhcNMzMxMTIzMTUxMDAxWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuBLDiY5rs9h8cIO60uIxPp3yvaA/PgwHChe0+H4ph1TcTUkCQmz/CdJgT9xaQDsijHsA/cgGrULNBfeYAiB5eM6nRlaZvlUJccRT62Bl/Ic98taP7tL4ele+Hz2He/pi44fq5QDQtHdjrdnpCgCIu3ZIfu8WRdYokA2Nby3yCCf4WeIo4uN30MpKGkEicm7yhxRYlO1Kng3SdSaird2c3Tf95O/Nru2xX2XdlueulEJcAQk58RipBvS5OwPTy4QVSFI2l6+iKJyar+0wXCVjXae4DBZOnoXwKgz3sbIA08EOTS0n5QBmdO6nltJ+8zwdxsyJFFGkWurh1SNaVMg4XAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGqezcVYBVh0lFoAgpPZtKZ8F9ijVPLGcXu0bKxToa1U0hPsA0OSGyO/coA0nuXrj3hhEihvWv1sacMGT7btA5d+lzZrQfk27IRQGumBxiJf+fhP9QcKA4SKZkUxWFz4LPwrioqQ3/Eywph6kMU67ScNAM/4EexO7ASaH889NkAnYUzCCCh5ZYp/hnrxEvG327rFc/whX4ktAOcXzxJg3+uvapPme263LChRTdpAvL+XEMx3DX9r6klkdH7kp2te666QOcMdi1nVF8Wl00GPpkOV4z7pUnaV+apew+XAcLF/UeTQvb12WlQUhlsN1e6OnWmcM+yySksr3L3qHiw4/zs="
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "f04f7696-b552-4dc5-9d09-f5c27c76584e",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bd15ac2f-f4fe-4710-98cb-8043cf6d7fa6",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8635f9ea-bff8-43e1-a6e3-ac173a1dadbd",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a868e759-27aa-470a-8e04-25492c8064bb",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "32bf0c07-75da-4d4e-a0ee-4770c7b43c0b",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "74378252-40a2-407d-8f3b-2a8099c5543b",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f5071004-6754-4a91-92da-c26680f7a353",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "75e6cc3f-41ea-4a37-99f6-87064a55485e",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b0572377-0e7d-4e43-841a-4820ba5baf96",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "266c5f99-7097-449c-b4ba-730e8f9b7148",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fb83ecd2-1a08-425f-9c03-8962d7b73b56",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "fa93c818-56d4-46cd-abc1-a07d2d9bb261",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "033e4413-b934-4945-b4a5-bba7607460b8",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "7ef14034-6e0c-4146-a737-53f537376e2e",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "a545cb77-aa50-46d7-a866-36cea9f71493",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "01339360-5fbb-4413-9cb6-9a1dbc8556be",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "30d524ea-b43e-4662-8e9d-cd8246db357a",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b26eac35-be62-445a-adb7-c3e46f659ef5",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "1e24d295-ea70-497e-9f74-6104b01c769a",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "cf499a9f-ecb4-4db2-9fb0-881c8c1e14e2",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5",
      "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "22.0.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]